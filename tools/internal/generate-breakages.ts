// Invoked by `deno task generate-default-breakage`.

import { basename } from "node:path";

const stdinText = await (async function () {
  let text = "";
  for await (
    const chunk of Deno.stdin.readable.pipeThrough(new TextDecoderStream())
  ) {
    text += chunk;
  }
  return text;
})();

const oneOfBreakages: [which: string, breakages: string][] = [];

for (
  const match of stdinText.matchAll(
    /^\s+(\w+) :group \$breakage\((?:always = (\w+)|oneOf = \[([\w ,]+)\])\)/gm,
  )
) {
  let [, which, alwaysBreakage, oneOfBreakage] = match;

  if (alwaysBreakage !== undefined) {
    oneOfBreakage = alwaysBreakage;
  }

  oneOfBreakages.push([
    which,
    oneOfBreakage.split(/ *, */g).map((b) =>
      `typeof SchemaChange_Breakage.${b.toUpperCase()}`
    ).join(" | "),
  ]);
}

console.log(`
// Automatically generated by ${basename(import.meta.filename!)}; do not edit.
import { SchemaChange_Breakage } from "../capnp/schema-diff.ts";

export type OneOfBreakages = {
${
  oneOfBreakages
    .map(([which, breakages]) => `  ${which}: ${breakages},`)
    .join("\n")
}
};`);
